AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: API Gateway for OurClass timetabling project

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: timetabling
      StageName: timetableStage
      Cors: "'*'"
      DefinitionBody:
        swagger: "2.0"
        info:
          title: timetabling API
        paths:
          /subject:
            options:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: mock
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:${AWS::AccountId}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375423677214:function:createSubject/invocations
              responses: {}
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:${AWS::AccountId}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375423677214:function:readSubject/invocations
              responses: {}
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:${AWS::AccountId}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375423677214:function:updateSubject/invocations
              responses: {}
          /subject/{id}:
            options:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: mock
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Contxrol-Allow-Methods: "'OPTIONS,GET,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
            delete:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:${AWS::AccountId}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375423677214:function:deleteSubject/invocations
              responses: {}
